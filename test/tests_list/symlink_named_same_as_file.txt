#
#
#

FUNCTION(TEST_PRERUN)
    CMLIB_PARSE_ARGUMENTS(
        ONE_VALUE
            VERSION INSTALL_DIR
            LIBRARY_NAME
        REQUIRED
            VERSION INSTALL_DIR
            LIBRARY_NAME
        P_ARGN ${ARGN}
    )

    MESSAGE(STATUS "Crushing symlinks")

    SET(library_name         "${__LIBRARY_NAME}")
    SET(version              "${__VERSION}")
    SET(library_soname       lib${library_name}.so.${version})
    SET(link_soname          lib${library_name}.so)
    SET(install_dir          ${__INSTALL_DIR})
    SET(link_filepath        ${__INSTALL_DIR}/${link_soname})
    SET(library_filepath     ${__INSTALL_DIR}/${library_soname})
    SET(new_library_filepath ${__INSTALL_DIR}/../${library_soname})
    EXECUTE_PROCESS(
        COMMAND ${CMAKE_COMMAND} -E copy "${library_filepath}" "${new_library_filepath}"
        RESULT_VARIABLE result
        WORKING_DIRECTORY "${install_dir}/"
    )
    IF(NOT result EQUAL 0)
        MESSAGE(FATAL_ERROR "cannot copy file ${library_filepath} --> ${new_library_filepath}")
    ENDIF()
    EXECUTE_PROCESS(
        COMMAND ${CMAKE_COMMAND} -E rm -f "${library_filepath}"
        RESULT_VARIABLE result
        WORKING_DIRECTORY "${install_dir}/"
    )
    IF(NOT result EQUAL 0)
        MESSAGE(FATAL_ERROR "cannot rm file -f ${library_filepath}")
    ENDIF()
    EXECUTE_PROCESS(
        COMMAND ${CMAKE_COMMAND} -E rm -f "${link_filepath}"
        RESULT_VARIABLE result
        WORKING_DIRECTORY "${install_dir}/"
    )
    IF(NOT result EQUAL 0)
        MESSAGE(FATAL_ERROR "cannot rm file ${link_filepath}")
    ENDIF()
    EXECUTE_PROCESS(
        COMMAND ${CMAKE_COMMAND} -E create_symlink "${new_library_filepath}" ${library_filepath}
        RESULT_VARIABLE result
        WORKING_DIRECTORY "${install_dir}/"
    )
    IF(NOT result EQUAL 0)
        MESSAGE(FATAL_ERROR "cannot symlink")
    ENDIF()
ENDFUNCTION()